@page "/counter"
@code {

    // Fields
    [Inject]
    public MessageService _messageService { get; set; }

    [Inject]
    public IJSRuntime _jsRuntime { get; set; }


    // Constructors
    protected override void OnInitialized()
    {

    }


    // Properties
    private int CurrentCount { get; set; } = 0;


    // Methods
    private void IncrementCount()
    {
        // Count
        this.CurrentCount += 5;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await _jsRuntime.InvokeVoidAsync("eval", "document.dispatchEvent(new Event('DOMContentLoaded'));");
    }
}


<!-- content -->

<HeadContent>
    <script>

        function runScript() {
            alert("Hello World");
        }

        document.addEventListener("DOMContentLoaded", function () {
            
            alert(document.getElementById("runScript").textContent);
        }, { once: true });
    </script>
</HeadContent>

<h3>@_messageService.GetValue()</h3>

<p role="status">Count: @CurrentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Run .NET</button>

<button class="btn btn-primary" id="runScript" onclick="runScript()">Run Script</button>